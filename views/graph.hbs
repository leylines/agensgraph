<div class="d-flex flex-wrap flex-md-nowrap">
  <div id="mynetwork" class="mynetwork flex-fill"></div>
  <div id="config" class="config"></div>
</div>

<!-- Add an invisible <div> element to the document, to hold the JSON data: -->
<div id="networkJSON-results" class="results" style="display:none"></div>

<script type="text/javascript">

  var options = {
    groups: {
      anomaly: {
        shape: 'dot',
        color: '#99004c',
        size: 15,
      },
      artifact: {
        shape: 'dot',
        color: '#ff8000',
        size: 20,
      },
      artificial: {
        shape: 'dot',
        color: '#cc6600',
        size: 15,
      },
      belief: {
        shape: 'dot',
        color: '#ffff33',
        size: 15,
      },
      person: {
        shape: 'dot',
        color: '#00ffff',
        size: 10,
      },
      dynasty: {
        shape: 'dot',
        color: '#0000ff',
        size: 15,
      },
      tribe: {
        shape: 'dot',
        color: '#7f00ff',
        size: 20,
      },
      organization: {
        shape: 'dot',
        color: '#ff0000',
        size: 15,
      },
      event: {
        shape: 'diamond',
        color: '#ff007f',
        size: 15,
      },
      empire: {
        shape: 'dot',
        color: '#0080ff',
        size: 15,
      },
      knowledge: {
        shape: 'dot',
        color: '#ffd700',
        size: 20,
      },
      place: {
        shape: 'dot',
        color: '#eeeeee',
        size: 8,
      }
    },
    nodes: {
    },
    edges: {
      arrows: {
        to: {enabled: true, scaleFactor:0.75, type:'arrow'},
        middle: {enabled: false, scaleFactor:1, type:'arrow'},
        from: {enabled: false, scaleFactor:0.3, type:'arrow'}
      },
      font: {
        size: 10,
        align: 'middle'
      },
      arrowStrikethrough: true,
      chosen: true,
      color: {
        highlight: 'red',
        hover: '#848484',
        inherit: 'from',
        opacity: 1.0
      },
      dashes: false
    },
    configure: {
      filter:function (option, path) {
        if (path.indexOf('physics') !== -1) {
          return true;
        }
        if (path.indexOf('smooth') !== -1 || option === 'smooth') {
          return true;
        }
        return false;
      },
      container: document.getElementById('config')
    }
  };

// -------------------------------------------------------------------------
// IMPORT DATA FROM EXTERNAL JSON FILE:
// Per: https://github.com/ikwattro/blog/blob/master/sources/easy-graph-visualization-with-vis-dot-js.adoc:
// NOTES:
// 1. Must use double quotes ("; not ') in that JSON file;
// 2. Cannot have comments in that file, only data!  See:
//    https://stackoverflow.com/questions/244777/can-comments-be-used-in-json

var json = $.getJSON("/download/json")
  .done(function(data){
    var data = {
      nodes: data.nodes,
      edges: data.links
    };
    var network = new vis.Network(container, data, options);
  });

var container = document.getElementById('mynetwork');

</script>
