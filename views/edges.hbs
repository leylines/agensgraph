
  {{>edges-table}}

  {{#if req.user}}
  <button class="btn btn-primary" data-toggle="modal" data-target=".add-form">Add Relation</button>
  {{/if}}

  {{#if req.user}}
  {{>edges-form mode='update'}}
  {{>edges-form mode='add'}}
  {{/if}}

  <script type="text/javascript">
    $(document).ready(function(){
      var url = window.location.href;
      $(".edgesTable").DataTable({
        pageLength: 30,
        bStateSave: true,
        paging: true,
        dom: 'Bfrtip',
        buttons: [
          'colvis',
          'copy',
          {
            extend: 'excel',
            title: 'nodes'
          },
          {
            extend: 'csv',
            title: 'nodes'
          }
        ]
      });
      {{#if req.user}}
      $('.update-form').on('hidden.bs.modal', function(event) {
        $('.sourceNodeType-update').find('option').attr('selected',false);
        $('.sourceNodeId-update').find('option').attr('selected',false);
        $('.typeId-update').find('option').attr("selected",false);
        $('.destinationNodeType-update').find('option').attr('selected',false);
        $('.destinationNodeId-update').find('option').attr('selected',false);
        $('.fromDateEra-update').find('option').attr('selected',false);
        $('.toDateEra-update').find('option').attr('selected',false);
        $('.fact-update').find('option').attr('selected',false);
        $('.link-update').val('');
      });
      var table = $(".edgesTable").DataTable();
      $(".edgesTable tbody").on( 'click', 'tr', function () {
        var data = table.row( this ).data();
        $(".edgeId-update").val(data[0]);
        $(".delete-update").attr("href", function(i, origLink) {
          return origLink.replace(/#/, data[0]);
        });
        $('.sourceNodeType-update').find('option:contains(' + data[1] + ')').attr('selected',true);
        updateDropDown('.sourceNodeType-update', '.sourceNodeId-update', $('.sourceNodeType-update').val());
        $(document).ajaxStop(function() {
          $('.sourceNodeId-update').find('option:contains(' + data[2] + ')').attr('selected',true);
        });
        $('.typeId-update').find('option:contains(' + data[3] + ')').attr('selected',true);
        $('.destinationNodeType-update').find('option:contains(' + data[4] + ')').attr('selected',true);
        updateDropDown('.destinationNodeType-update', '.destinationNodeId-update', $('.destinationNodeType-update').val());
        $(document).ajaxStop(function() {
          $('.destinationNodeId-update').find('option:contains(' + data[5] + ')').attr('selected',true);
        });
        var [year, month, day] = data[6].split('-');
        $(".fromDate-update").val(year + (month? "-" + month : "-01") + (day? "-" + day : "-01"));
        if (data[7] != "") {
          $('.fromDateEra-update').find('option:contains(' + data[7] + ')').attr('selected',true);
        };
        var [year, month, day] = data[8].split('-');
        $(".toDate-update").val(year + (month? "-" + month : "-01") + (day? "-" + day : "-01"));
        if (data[9] != "") {
          $('.toDateEra-update').find('option:contains(' + data[9] + ')').attr('selected',true);
        };
        $('.fact-update').find('option[value=' + data[10] + ']').attr("selected",true);
        $('.link-update').val(data[11]);
        $('.contributor-update').val(data[12]);
        {{#ifCond req.user.role '==' 'admin'}}
        $('.checked-update').prop('checked', (data[13] == 'true'));
        {{/ifCond}}
        $('.update-form').modal('show');
      });
      $('.discard-add').click(function(){
        $('.sourceNodeType-add').prop('selectedIndex',0);
        $('.sourceNodeId-add').empty();
        $('.sourceNodeId-add').append($("<option hidden selected>").val('').text('Select Node'));
        $('.sourceNodeId-add').attr('disabled',true);
        $('.typeId-add').prop('selectedIndex',0);
        $('.destinationNodeType-add').prop('selectedIndex',0);
        $('.destinationNodeId-add').empty();
        $('.destinationNodeId-add').append($("<option hidden selected>").val('').text('Select Node'));
        $('.destinationNodeId-add').attr('disabled',true);
        $('.fromDate-add').val('');
        $('.fromDateEra-add').prop('selectedIndex',0);
        $('.toDate-add').val('');
        $('.toDateEra-add').prop('selectedIndex',0);
        $('.fact-add').prop('selectedIndex',0);
        $('.link-add').val('');
        $('.add-form').modal('hide');
      });
      $('.sourceNodeType-add').change(function(){
        updateDropDown('.sourceNodeType-add', '.sourceNodeId-add', $(this).val());
      });
      $('.sourceNodeType-update').change(function(){
        updateDropDown('.sourceNodeType-update', '.sourceNodeId-update', $(this).val());
      });
      $('.destinationNodeType-add').change(function(){
        updateDropDown('.destinationNodeType-add', '.destinationNodeId-add', $(this).val());
      });
      $('.destinationNodeType-update').change(function(){
        updateDropDown('.destinationNodeType-update', '.destinationNodeId-update',  $(this).val());
      });
      {{/if}}
    });

    {{#if req.user}}
    function updateDropDown(sdropdown, ddropdown, selection) {
      $.ajax({
        type: 'GET',
        url : 'select/getnodesbyid/?nodeTypeId=' + selection,
        success: function(result) {
          $(ddropdown).empty();
          for (row in result) {
            $(ddropdown).append($("<option>").val(result[row].nodeId).text(result[row].name));
          }
          $(ddropdown).attr("disabled", false);
        },
        error: function(jqXHR, textStatus, errorThrown) {
            alert(jqXHR + ":" + textStatus + ":" + errorThrown);
        }
      });
    }
    {{/if}}
         
  </script>
