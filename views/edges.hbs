
  {{>edges-table}}

  {{#if req.user}}
  <button class="btn btn-primary" data-toggle="modal" data-target=".add-form">Add Relation</button>
  {{/if}}

  {{#if req.user}}
  {{>edges-form mode='update'}}
  {{>edges-form mode='add'}}
  {{/if}}

  <script type="text/javascript">
    $(document).ready(function(){
      var url = window.location.href;
      $(".edgesTable").DataTable({
        search: {
          regex: true
        },
        columnDefs: [
          {
            targets: [ 1, 3, 5, 7, 9 ],
            visible: false,
            searchable: false
          }
        ],
        pageLength: 30,
        bStateSave: true,
        paging: true,
        dom: 'Bfrtip',
        buttons: [
          'colvis',
          'copy',
          {
            extend: 'excel',
            title: 'nodes'
          },
          {
            extend: 'csv',
            title: 'nodes'
          }
        ]
      });
      {{#if req.user}}
      $('.update-form').on('hidden.bs.modal', function(event) {
        $('.sourceNodeType-update').find('option').attr('selected',false);
        $('.sourceNodeId-update').find('option').attr('selected',false);
        $('.typeId-update').find('option').attr('selected',false);
        $('.destinationNodeType-update').find('option').attr('selected',false);
        $('.destinationNodeId-update').find('option').attr('selected',false);
        $('.fromDateEra-update').find('option').attr('selected',false);
        $('.toDateEra-update').find('option').attr('selected',false);
        $('.fact-update').find('option').attr('selected',false);
        $('.link-update').val('');
      });
      var table = $(".edgesTable").DataTable();
      $(".edgesTable tbody").on( 'click', 'tr', function () {
        var data = table.row( this ).data();
        $(".edgeId-update").val(data[0]);
        $(".delete-update").attr("href", function(i, origLink) {
          return origLink.replace(/#/, data[0]);
        });
        $('.sourceNodeType-update').val(data[1]);
        updateSourceNodeId(data[1], 'update', data[3]);
        updateEdgeType(data[1], 'update', data[5], data[7], data[9]);
        var [year, month, day] = data[11].split('-');
        $(".fromDate-update").val(year + (month? "-" + month : "-01") + (day? "-" + day : "-01"));
        if (data[12] != "") {
          $('.fromDateEra-update').find('option:contains(' + data[12] + ')').attr('selected',true);
        };
        var [year, month, day] = data[13].split('-');
        $(".toDate-update").val(year + (month? "-" + month : "-01") + (day? "-" + day : "-01"));
        if (data[14] != "") {
          $('.toDateEra-update').find('option:contains(' + data[14] + ')').attr('selected',true);
        };
        $('.fact-update').find('option[value=' + data[15] + ']').attr("selected",true);
        $('.link-update').val(data[16]);
        $('.contributor-update').val(data[17]);
        {{#ifCond req.user.role '==' 'admin'}}
        $('.checked-update').prop('checked', (data[18] == 'true'));
        {{/ifCond}}
        $('.update-form').modal('show');
      });
      $('.discard-add').click(function(){
        $('.sourceNodeType-add').prop('selectedIndex',0);
        $('.sourceNodeId-add').empty();
        $('.sourceNodeId-add').append($("<option hidden selected>").val('').text('Select Node'));
        $('.sourceNodeId-add').attr('disabled',true);
        $('.typeId-add').empty();
        $('.typeId-add').append($("<option hidden selected>").val('').text('Select Relation'));
        $('.typeId-add').attr('disabled',true);
        $('.destinationNodeType-add').empty();
        $('.destinationNodeType-add').append($("<option hidden selected>").val('').text('Select Node-Type'));
        $('.destinationNodeType-add').attr('disabled',true);
        $('.destinationNodeId-add').empty();
        $('.destinationNodeId-add').append($("<option hidden selected>").val('').text('Select Node'));
        $('.destinationNodeId-add').attr('disabled',true);
        $('.fromDate-add').val('');
        $('.fromDateEra-add').prop('selectedIndex',0);
        $('.toDate-add').val('');
        $('.toDateEra-add').prop('selectedIndex',0);
        $('.fact-add').prop('selectedIndex',0);
        $('.link-add').val('');
        $('.add-form').modal('hide');
      });
      $('.sourceNodeType-add').change(function(){
        updateSourceNodeId($(this).val(), 'add')
        updateEdgeType($(this).val(), 'add');
      });
      $('.typeId-add').change(function(){
        updateDestinationNodeType($(this).val(), 'add');
      });
      $('.destinationNodeType-add').change(function(){
        updateDestinationNodeId($(this).val(), 'add');
      });
      $('.sourceNodeType-update').change(function(){
        updateSourceNodeId($(this).val(), 'update')
        updateEdgeType($(this).val(), 'update');
      });
      $('.typeId-update').change(function(){
        updateDestinationNodeType($(this).val(), 'update');
      });
      $('.destinationNodeType-update').change(function(){
        updateDestinationNodeId($(this).val(), 'update');
      });
      {{/if}}
    });

    {{#if req.user}}
    function getData(getUrl) {
      return $.ajax({
        type: 'GET',
        url : getUrl
      });
    }

    function updateSourceNodeId(selection, type, nodeId) {
      var sourceNodeUrl = 'select/getnodesbyid/?nodeTypeId=' + selection;
      getData(sourceNodeUrl).done(function(result) {
        fillNodeDropdown('.sourceNodeId-' + type, result, nodeId);
      });
    }
    function updateEdgeType(selection, type, edgeType, destinationNodeType, destinationNodeId) {
      var nodeTypeUrl = 'select/getedgetypes/?nodeTypeId=' + selection;
      getData(nodeTypeUrl).done(function(result) {
        if (typeof edgeType !== "undefined") {
          fillTypeDropdown('.typeId-' + type, result, "edgetypeEdgeTypeId", "edgetype", edgeType);
          updateDestinationNodeType(edgeType, type, destinationNodeType, destinationNodeId);
        } else {
          fillTypeDropdown('.typeId-' + type, result, "edgetypeEdgeTypeId", "edgetype");
          updateDestinationNodeType(result[0]['edgetypeEdgeTypeId'], type, destinationNodeType, destinationNodeId);
        }
      });
    }
    function updateDestinationNodeType(selection, type, destinationNodeType, destinationNodeId) {
      var nodeTypeUrl = 'select/getnodetypes/?edgeTypeId=' + selection;
      getData(nodeTypeUrl).done(function(result) {
        fillTypeDropdown('.destinationNodeType-' + type, result, "nodetypeNodeTypeId", "nodetype", destinationNodeType);
        if (typeof destinationNodeType !== "undefined") {
          updateDestinationNodeId(destinationNodeType, type, destinationNodeId);
        } else {
          updateDestinationNodeId(result[0]['nodetypeNodeTypeId'], type, destinationNodeId);
        }
      });
    }
    function updateDestinationNodeId(selection, type, destinationNodeId) {
      var destinationNodeUrl = 'select/getnodesbyid/?nodeTypeId=' + selection;
      getData(destinationNodeUrl).done(function(result) {
        if (typeof destinationNodeId !== "undefined") {
          fillNodeDropdown('.destinationNodeId-' + type, result, destinationNodeId);
        } else {
          fillNodeDropdown('.destinationNodeId-' + type, result, destinationNodeId);
        }
      });
    }

    function fillNodeDropdown(dropdown, result, selection) {
       $(dropdown).empty();
       for (row in result) {
         $(dropdown).append($("<option>").val(result[row].nodeId).text(result[row].name));
       }
       if (typeof selection !== "undefined") {
         $(dropdown).val(selection);
       }
       $(dropdown).attr("disabled", false);
    }
    function fillTypeDropdown(dropdown, result, value, name, selection) {
       $(dropdown).empty();
       for (row in result) {
         $(dropdown).append($("<option>").val(result[row][value]).text(result[row][name]['name']));
       }
       if (typeof selection !== "undefined") {
         $(dropdown).val(selection);
       }
       $(dropdown).attr("disabled", false);
    }

    {{/if}}
         
  </script>
