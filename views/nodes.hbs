
  {{>nodes-table}}

  {{#if req.user}}
  <button class="btn btn-primary" data-toggle="modal" data-target=".add-form">Add Node</button>
  {{/if}}

  {{#if req.user}}
  {{>nodes-form mode='update'}}
  {{>nodes-form mode='add'}}
  {{/if}}

  <script type="text/javascript">
    $(document).ready(function(){
      var url = window.location.href;
      $(".nodesTable").DataTable({
        search: {
          regex: true
        },
        pageLength: 30,
        bStateSave: true,
        paging: true,
        dom: 'Bfrtip',
        buttons: [
          'colvis',
          'copy',
          {
            extend: 'excel',
            title: 'nodes'
          },
          {
            extend: 'csv',
            title: 'nodes'
          }
        ]
      });
      {{#if req.user}}
      $('.update-form').on('hidden.bs.modal', function(event) {
        $('.name-update').val('');
        $('.otherName-update').val('');
        $('.fromDateEra-update').find('option').attr('selected',false);
        $('.toDateEra-update').find('option').attr('selected',false);
        $('.typeId-update').find('option').attr('selected',false);
        $('.link-update').val('');
      });
      var table = $(".nodesTable").DataTable();
      $(".nodesTable tbody").on( 'click', 'tr', function () {
        var data = table.row( this ).data();
        $(".nodeId-update").val(data[0]);
        $(".delete-update").attr("href", function(i, origLink) {
          return origLink.replace(/#/, data[0]);
        });
        $(".name-update").val(data[1]);
        $(".otherName-update").val(data[2]);
        var [year, month, day] = data[3].split('-');
        $(".fromDate-update").val(year + (month? "-" + month : "-01") + (day? "-" + day : "-01"));
        $(".fromDateEra-update").find('option').attr("selected",false) ;
        if (data[4] != "") {
          $(".fromDateEra-update").find('option:contains(' + data[4] + ')').attr("selected",true);
        }
        var [year, month, day] = data[5].split('-');
        $(".toDate-update").val(year + (month? "-" + month : "-01") + (day? "-" + day : "-01"));
        $(".toDateEra-update").find('option').attr("selected",false) ;
        if (data[6] != "") {
          $(".toDateEra-update").find('option:contains(' + data[6] + ')').attr("selected",true);
        }
        $(".typeId-update").find('option').attr("selected",false) ;
        $(".typeId-update").find('option:contains(' + data[7] + ')').attr("selected",true);
        $(".link-update").val(data[8]);
        $(".latInput-update").val(data[9]);
        $(".lngInput-update").val(data[10]);
        updateMarker.setLatLng([data[9], data[10]]);
        centerLeafletMapOnMarker(updateMap, updateMarker);
        $(".contributor-update").val(data[11]);
        {{#ifCond req.user.role '==' 'admin'}}
        $(".checked-update").prop("checked", (data[12] == 'true'));
        {{/ifCond}}
        $('.update-form').modal('show');
      });
      $('.discard-add').click(function(){
        $('.name-add').val('');
        $('.otherName-add').val('');
        $('.fromDate-add').val('');
        $('.fromDateEra-add').prop('selectedIndex',0);
        $('.toDate-add').val('');
        $('.toDateEra-add').prop('selectedIndex',0);
        $('.typeId-add').prop('selectedIndex',0);
        $('.link-add').val('');
        $('.add-form').modal('hide');
      });
      var [addMap, addMarker] = addMapPicker('add');
      var [updateMap, updateMarker] = addMapPicker('update');
      $('.add-form').on('shown.bs.modal', function(){
        setTimeout(function() {
          addMap.invalidateSize();
        }, 10);
      });
      $('.update-form').on('shown.bs.modal', function(){
        setTimeout(function() {
          updateMap.invalidateSize();
        }, 10);
      });
      {{/if}}
    });
    {{#if req.user}}
    function addMapPicker(mode) {
      var map = L.map('map-' + mode, {center : [0,0], zoom: 0});
      L.tileLayer('https://stamen-tiles.a.ssl.fastly.net/terrain/{z}/{x}/{y}.jpg', {
        maxZoom: 15,
        attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, under <a href="http://www.openstreetmap.org/copyright">ODbL</a>.',
        noWrap : true
      }).addTo(map);
      var marker = L.marker([0,0]).addTo(map);
      map.on('click', function(e) {
        $('.latInput-' + mode).val(e.latlng.lat);
        $('.lngInput-' + mode).val(e.latlng.lng);
        marker.setLatLng([e.latlng.lat, e.latlng.lng]);
      });
      var updateMarkerByInputs = function() {
        marker.setLatLng([$('.latInput-' + mode).val(), $('.lngInput-' + mode).val()]);
      }
      $('.latInput-' + mode).change(updateMarkerByInputs);
      $('.lngInput-' + mode).change(updateMarkerByInputs);
      return [map, marker];
    };
    function centerLeafletMapOnMarker(map, marker) {
      var latLngs = marker.getLatLng();
      console.log(latLngs.lat);
      console.log(latLngs.lng);
      if (latLngs.lat != '0' || latLngs.lng != '0') {
        var markerBounds = L.latLngBounds([latLngs]);
        map.fitBounds(markerBounds);
      } else {
        map.setView([0,0],0);
      }
    }
    {{/if}}
  </script>
